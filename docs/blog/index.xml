<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Tanay Tummalapalli</title>
    <link>https://ttanay.github.io/blog/</link>
    <description>Recent content in Blogs on Tanay Tummalapalli</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 May 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ttanay.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Arriving at Kadane&#39;s algorithm</title>
      <link>https://ttanay.github.io/blog/arriving-at-kadanes/</link>
      <pubDate>Sun, 26 May 2024 00:00:00 +0000</pubDate>
      <guid>https://ttanay.github.io/blog/arriving-at-kadanes/</guid>
      <description>I found the explanation of Kadane&amp;rsquo;s algorithm on Wikipedia[1] too dense for a normie like me. So, I asked myself, if the algorithm were to be lost to the sands of time, how would I arrive at it naturally?&#xA;Kadane&amp;rsquo;s algorithm is a solution to the maximum subarray problem.&#xA;What is the maximum subarray problem? We take help from Wikipedia here.&#xA;In computer science, the maximum sum subarray problem, also known as the maximum segment sum problem, is the task of finding a contiguous subarray with the largest sum, within a given one-dimensional array A[1&amp;hellip;n] of numbers.</description>
    </item>
    <item>
      <title>Proof for height of a binary tree</title>
      <link>https://ttanay.github.io/blog/binary-tree-height-proof/</link>
      <pubDate>Fri, 26 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://ttanay.github.io/blog/binary-tree-height-proof/</guid>
      <description>I keep forgetting the standard result of the height of a binary tree. I figured, writing out the proof on my own might help me remember the result.&#xA;We assume that the tree is a full binary tree for simplicity. A full binary tree is defined as follows[1]:&#xA;A binary tree in which each node has exactly zero or two children.&#xA;A binary tree starts with the root node at level one(we consider levels to be 1-indexed).</description>
    </item>
    <item>
      <title>Query Processing In Clickhouse</title>
      <link>https://ttanay.github.io/blog/query-processing-in-clickhouse/</link>
      <pubDate>Sun, 24 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://ttanay.github.io/blog/query-processing-in-clickhouse/</guid>
      <description>ClickHouse is easily one of the fastest OLAP databases on the face of this planet. I have had the fortune of working on it at different stints. This is my attempt to best summarize my understanding of it.&#xA;This post is latest as on 835afe1f342.&#xA;Introduction ClickHouse is a columnar, vectorized OLAP database written in C++. We will take an example read query, and look at how the query is processed.</description>
    </item>
  </channel>
</rss>
